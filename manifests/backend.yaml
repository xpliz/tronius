---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myservice
  template:
    metadata:
      labels:
        app: myservice
    spec:
      containers:
        - name: myservice
          image: nginx:stable-alpine
          ports:
            - containerPort: 8443
              name: https
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: certs-server
              mountPath: /etc/nginx/server
              readOnly: true
            - name: certs-ca
              mountPath: /etc/nginx/ca
              readOnly: true
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "128Mi"
      volumes:
        - name: nginx-conf
          configMap:
            name: myservice-nginx-config
        - name: certs-server
          secret:
            secretName: myservice-cert
            items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
        - name: certs-ca
          secret:
            secretName: myservice-ca
            items:
              - key: ca.crt
                path: ca.crt
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: myservice-nginx-config
  namespace: default
data:
  default.conf: |
    server {
      listen 8443 ssl;
      server_name myservice.example.com;

      ssl_certificate /etc/nginx/server/server.crt;
      ssl_certificate_key /etc/nginx/server/server.key;

      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers HIGH:!aNULL:!MD5;

      location / {
        default_type text/html;
        return 200 "<html><head><title>myservice demo</title></head><body><h1>Hello from backend over HTTPS!</h1><p>This is served by nginx.</p></body></html>";
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: myservice
  namespace: default
spec:
  selector:
    app: myservice
  ports:
    - name: https
      port: 8443
      targetPort: 8443
  type: ClusterIP
---
